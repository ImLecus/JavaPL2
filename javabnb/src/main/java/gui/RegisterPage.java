package gui;

import java.awt.event.*;
import java.util.Calendar;
import poo.javabnb.Client;
import poo.javabnb.util.FontManager;
import poo.javabnb.Validate;
import polaris.Polaris;
import poo.javabnb.util.Hashing;
import poo.javabnb.Host;

public class RegisterPage extends javax.swing.JPanel {
    
    private boolean hostRegister = false;
    public RegisterPage() {
        initComponents();
        resetErrorLabels();
        Polaris.disable(submitButton);
        
        eulaLabel.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                resetErrorLabels();
                resetText();
                App.redirect("EULA");
            }
        });
        Polaris.highlightOnHover(eulaLabel);

        submitButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                resetErrorLabels();
                register();
            }
        });
        Polaris.highlightOnHover(submitButton);

        atrasButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                resetText();
                resetErrorLabels();
                App.redirect("LOGIN");
            }
        });

        termsCheckbox.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                submitButton.setEnabled(termsCheckbox.isSelected());
                submitButton.setBackground(submitButton.isEnabled() ? Polaris.MAIN_COLOR : Polaris.DISABLED_COLOR);
            }
        });
    }
    
    private void register() {
        boolean name = Validate.validateName(nameInput.getText());
        errorLabel1.setVisible(!name);
        boolean phone = Validate.validatePhone(phoneInput.getText());
        errorLabel2.setVisible(!phone);
        boolean dni = Validate.validateDNI(DNIInput.getText().toCharArray());
        errorLabel3.setVisible(!dni);
        boolean mail = Validate.validateMail(mailInput.getText());
        if(App.db.contains(mailInput.getText())){
            errorLabel4.setText("Este correo ya está en uso");
            mail = false;
        }
        else{
            errorLabel4.setText("Formato inválido");
        }
        errorLabel4.setVisible(!mail);
        boolean password = Validate.validatePassword(passwordInput.getPassword());
        errorLabel5.setVisible(!password);
        boolean card = Validate.validateCard(cardnumberInput.getText(), dateInput.getText(), cvvInput.getText());
        errorLabel6.setVisible(!card);
        if(name && phone && dni && mail && password && card){
            String hashedPassword = Hashing.hashInfo(String.valueOf(passwordInput.getPassword()));
            System.out.println("Hashed password: " + hashedPassword);
            if(hostRegister){
                Host host = new Host(
                    DNIInput.getText(),
                    nameInput.getText(),
                    mailInput.getText(),
                    hashedPassword,
                    phoneInput.getText(),
                    Calendar.getInstance().getTime(),
                    false
                );
                App.db.add(host);
            }
            else {
                Client client = new Client(
                    DNIInput.getText(),
                    nameInput.getText(),
                    mailInput.getText(),
                    hashedPassword,
                    phoneInput.getText()
                );
                App.db.add(client);
            }
            
            App.db.saveData("./src/main/resources/data/data.dat"); 
            App.redirect("LOGIN");
        }
        resetText();
    }


    private void resetText(){

        mailInput.setText("example@example.com");
        passwordInput.setText("");
        DNIInput.setText("");
        nameInput.setText("");
        phoneInput.setText("");
    }

    private void resetErrorLabels(){
        errorLabel1.setVisible(false);
        errorLabel2.setVisible(false);
        errorLabel3.setVisible(false);
        errorLabel4.setVisible(false);
        errorLabel5.setVisible(false);
        errorLabel6.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        atrasButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        nameInput = new javax.swing.JTextField();
        nameLabel = new javax.swing.JLabel();
        phoneLabel = new javax.swing.JLabel();
        phoneInput = new javax.swing.JTextField();
        DNILabel = new javax.swing.JLabel();
        DNIInput = new javax.swing.JTextField();
        errorLabel1 = new javax.swing.JLabel();
        errorLabel2 = new javax.swing.JLabel();
        errorLabel3 = new javax.swing.JLabel();
        errorLabel4 = new javax.swing.JLabel();
        errorLabel5 = new javax.swing.JLabel();
        mailLabel = new javax.swing.JLabel();
        mailInput = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        passwordInput = new javax.swing.JPasswordField();
        passwordLabel2 = new javax.swing.JLabel();
        passwordLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        termsCheckbox = new javax.swing.JCheckBox();
        eulaLabel = new javax.swing.JLabel();
        submitButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        particularButton = new javax.swing.JButton();
        hostButton = new javax.swing.JButton();
        cardnumberLabel = new javax.swing.JLabel();
        cardnumberInput = new javax.swing.JTextField();
        errorLabel6 = new javax.swing.JLabel();
        cardpropsPanel = new javax.swing.JPanel();
        cardnumberLabel1 = new javax.swing.JLabel();
        cardnumberLabel2 = new javax.swing.JLabel();
        dateInput = new javax.swing.JFormattedTextField();
        cvvInput = new javax.swing.JTextField();

        jButton1.setText("jButton1");

        jPanel2.setLayout(new java.awt.GridBagLayout());

        setLayout(new java.awt.BorderLayout());

        jPanel6.setBackground(Polaris.BG_COLOR);
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        atrasButton.setBackground(Polaris.TRANSPARENT_COLOR);
        atrasButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow.png"))); // NOI18N
        atrasButton.setBorder(null);
        atrasButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        atrasButton.setFocusable(false);
        atrasButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        atrasButton.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        atrasButton.setMargin(new java.awt.Insets(2, 2, 2, 2));
        jPanel6.add(atrasButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        add(jPanel6, java.awt.BorderLayout.PAGE_START);

        jPanel7.setBackground(Polaris.BG_COLOR);
        jPanel7.setLayout(new java.awt.GridBagLayout());

        title.setFont(FontManager.titleFont);
        title.setForeground(polaris.Polaris.TEXT_COLOR);
        title.setText("Crea tu cuenta");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        jPanel7.add(title, gridBagConstraints);

        nameInput.setBackground(polaris.Polaris.INPUT_BG_COLOR);
        nameInput.setFont(FontManager.regularFont);
        nameInput.setForeground(polaris.Polaris.TEXT_COLOR);
        nameInput.setBorder(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 24;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel7.add(nameInput, gridBagConstraints);

        nameLabel.setFont(FontManager.regularFont);
        nameLabel.setForeground(polaris.Polaris.TEXT_COLOR);
        nameLabel.setText("Nombre");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel7.add(nameLabel, gridBagConstraints);

        phoneLabel.setFont(FontManager.regularFont);
        phoneLabel.setForeground(polaris.Polaris.TEXT_COLOR);
        phoneLabel.setText("Teléfono");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel7.add(phoneLabel, gridBagConstraints);

        phoneInput.setBackground(polaris.Polaris.INPUT_BG_COLOR);
        phoneInput.setFont(FontManager.regularFont);
        phoneInput.setForeground(polaris.Polaris.TEXT_COLOR);
        phoneInput.setBorder(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 24;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel7.add(phoneInput, gridBagConstraints);

        DNILabel.setFont(FontManager.regularFont);
        DNILabel.setForeground(polaris.Polaris.TEXT_COLOR);
        DNILabel.setText("DNI");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel7.add(DNILabel, gridBagConstraints);

        DNIInput.setBackground(polaris.Polaris.INPUT_BG_COLOR);
        DNIInput.setFont(FontManager.regularFont);
        DNIInput.setForeground(polaris.Polaris.TEXT_COLOR);
        DNIInput.setBorder(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 24;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel7.add(DNIInput, gridBagConstraints);

        errorLabel1.setFont(FontManager.regularFont);
        errorLabel1.setForeground(polaris.Polaris.SECONDARY_COLOR);
        errorLabel1.setText("El formato es inválido");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        jPanel7.add(errorLabel1, gridBagConstraints);

        errorLabel2.setFont(FontManager.regularFont);
        errorLabel2.setForeground(polaris.Polaris.SECONDARY_COLOR);
        errorLabel2.setText("El formato es inválido");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        jPanel7.add(errorLabel2, gridBagConstraints);

        errorLabel3.setFont(FontManager.regularFont);
        errorLabel3.setForeground(polaris.Polaris.SECONDARY_COLOR);
        errorLabel3.setText("El DNI no existe");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        jPanel7.add(errorLabel3, gridBagConstraints);

        errorLabel4.setFont(FontManager.regularFont);
        errorLabel4.setForeground(polaris.Polaris.SECONDARY_COLOR);
        errorLabel4.setText("El formato es inválido");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        jPanel7.add(errorLabel4, gridBagConstraints);

        errorLabel5.setFont(FontManager.regularFont);
        errorLabel5.setForeground(polaris.Polaris.SECONDARY_COLOR);
        errorLabel5.setText("La contraseña no cumple los requisitos");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 18;
        jPanel7.add(errorLabel5, gridBagConstraints);

        mailLabel.setFont(FontManager.regularFont);
        mailLabel.setForeground(polaris.Polaris.TEXT_COLOR);
        mailLabel.setText("Mail");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel7.add(mailLabel, gridBagConstraints);

        mailInput.setBackground(polaris.Polaris.INPUT_BG_COLOR);
        mailInput.setFont(FontManager.regularFont);
        mailInput.setForeground(polaris.Polaris.TEXT_COLOR);
        mailInput.setBorder(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 24;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel7.add(mailInput, gridBagConstraints);

        passwordLabel.setFont(FontManager.regularFont);
        passwordLabel.setForeground(polaris.Polaris.TEXT_COLOR);
        passwordLabel.setText("Contraseña");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel7.add(passwordLabel, gridBagConstraints);

        passwordInput.setBackground(polaris.Polaris.INPUT_BG_COLOR);
        passwordInput.setFont(FontManager.regularFont);
        passwordInput.setForeground(polaris.Polaris.TEXT_COLOR);
        passwordInput.setBorder(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 24;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel7.add(passwordInput, gridBagConstraints);

        passwordLabel2.setFont(FontManager.subText);
        passwordLabel2.setForeground(polaris.Polaris.TEXT_COLOR);
        passwordLabel2.setText("La contraseña debe tener como mínimo 8 caracteres,");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel7.add(passwordLabel2, gridBagConstraints);

        passwordLabel3.setFont(FontManager.subText);
        passwordLabel3.setForeground(polaris.Polaris.TEXT_COLOR);
        passwordLabel3.setText("una mayúscula y un número.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 17;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        jPanel7.add(passwordLabel3, gridBagConstraints);

        jPanel1.setBackground(new java.awt.Color(255, 248, 249));

        termsCheckbox.setBackground(Polaris.BG_COLOR);
        termsCheckbox.setFont(FontManager.regularFont);
        termsCheckbox.setForeground(polaris.Polaris.TEXT_COLOR);
        termsCheckbox.setText("Acepta los términos de uso");
        jPanel1.add(termsCheckbox);

        eulaLabel.setFont(FontManager.boldFont);
        eulaLabel.setForeground(polaris.Polaris.MAIN_COLOR);
        eulaLabel.setText("y el EULA");
        eulaLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(eulaLabel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 23;
        jPanel7.add(jPanel1, gridBagConstraints);

        submitButton.setFont(FontManager.boldFont);
        submitButton.setForeground(polaris.Polaris.BG_COLOR);
        submitButton.setText("Registrarse");
        submitButton.setBorder(null);
        submitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        submitButton.setFocusable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 12;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 0);
        jPanel7.add(submitButton, gridBagConstraints);

        jPanel3.setBackground(Polaris.TRANSPARENT_COLOR);
        jPanel3.setLayout(new java.awt.GridBagLayout());

        particularButton.setBackground(Polaris.MAIN_COLOR);
        particularButton.setFont(FontManager.boldFont);
        particularButton.setForeground(Polaris.BG_COLOR);
        particularButton.setText("Particular");
        particularButton.setBorder(null);
        particularButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        particularButton.setFocusPainted(false);
        particularButton.setFocusable(false);
        particularButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                particularButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 36;
        gridBagConstraints.ipady = 12;
        jPanel3.add(particularButton, gridBagConstraints);

        hostButton.setBackground(Polaris.INPUT_BG_COLOR);
        hostButton.setFont(FontManager.boldFont);
        hostButton.setForeground(Polaris.TEXT_COLOR);
        hostButton.setText("Anfitrión");
        hostButton.setBorder(null);
        hostButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hostButton.setFocusPainted(false);
        hostButton.setFocusable(false);
        hostButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hostButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 36;
        gridBagConstraints.ipady = 12;
        jPanel3.add(hostButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel7.add(jPanel3, gridBagConstraints);

        cardnumberLabel.setFont(FontManager.regularFont);
        cardnumberLabel.setForeground(polaris.Polaris.TEXT_COLOR);
        cardnumberLabel.setText("Número de tarjeta");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 19;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanel7.add(cardnumberLabel, gridBagConstraints);

        cardnumberInput.setBackground(polaris.Polaris.INPUT_BG_COLOR);
        cardnumberInput.setFont(FontManager.regularFont);
        cardnumberInput.setForeground(polaris.Polaris.TEXT_COLOR);
        cardnumberInput.setBorder(null);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 24;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel7.add(cardnumberInput, gridBagConstraints);

        errorLabel6.setFont(FontManager.regularFont);
        errorLabel6.setForeground(polaris.Polaris.SECONDARY_COLOR);
        errorLabel6.setText("El formato es inválido");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 22;
        jPanel7.add(errorLabel6, gridBagConstraints);

        cardpropsPanel.setLayout(new java.awt.GridLayout(2, 2));

        cardnumberLabel1.setFont(FontManager.regularFont);
        cardnumberLabel1.setForeground(polaris.Polaris.TEXT_COLOR);
        cardnumberLabel1.setText("Fecha de caducidad");
        cardpropsPanel.add(cardnumberLabel1);

        cardnumberLabel2.setFont(FontManager.regularFont);
        cardnumberLabel2.setForeground(polaris.Polaris.TEXT_COLOR);
        cardnumberLabel2.setText("CVV");
        cardpropsPanel.add(cardnumberLabel2);

        dateInput.setBackground(Polaris.INPUT_BG_COLOR);
        dateInput.setBorder(null);
        dateInput.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("MM/yy"))));
        dateInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        dateInput.setFont(FontManager.regularFont);
        cardpropsPanel.add(dateInput);

        cvvInput.setBackground(Polaris.INPUT_BG_COLOR);
        cvvInput.setFont(FontManager.regularFont);
        cvvInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        cvvInput.setBorder(null);
        cardpropsPanel.add(cvvInput);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 21;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel7.add(cardpropsPanel, gridBagConstraints);

        add(jPanel7, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void particularButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_particularButtonActionPerformed
        particularButton.setForeground(Polaris.BG_COLOR);
        particularButton.setBackground(Polaris.MAIN_COLOR);
        hostButton.setBackground(Polaris.INPUT_BG_COLOR);
        hostButton.setForeground(Polaris.TEXT_COLOR);
        cardnumberLabel.setVisible(true);
        cardnumberInput.setVisible(true);
        cardpropsPanel.setVisible(true);
        hostRegister = false;
    }//GEN-LAST:event_particularButtonActionPerformed

    private void hostButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hostButtonActionPerformed
        hostButton.setForeground(Polaris.BG_COLOR);
        hostButton.setBackground(Polaris.MAIN_COLOR);
        particularButton.setBackground(Polaris.INPUT_BG_COLOR);
        particularButton.setForeground(Polaris.TEXT_COLOR);
        cardnumberLabel.setVisible(false);
        cardnumberInput.setVisible(false);
        cardpropsPanel.setVisible(false);
        hostRegister = true;
    }//GEN-LAST:event_hostButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DNIInput;
    private javax.swing.JLabel DNILabel;
    private javax.swing.JButton atrasButton;
    private javax.swing.JTextField cardnumberInput;
    private javax.swing.JLabel cardnumberLabel;
    private javax.swing.JLabel cardnumberLabel1;
    private javax.swing.JLabel cardnumberLabel2;
    private javax.swing.JPanel cardpropsPanel;
    private javax.swing.JTextField cvvInput;
    private javax.swing.JFormattedTextField dateInput;
    private javax.swing.JLabel errorLabel1;
    private javax.swing.JLabel errorLabel2;
    private javax.swing.JLabel errorLabel3;
    private javax.swing.JLabel errorLabel4;
    private javax.swing.JLabel errorLabel5;
    private javax.swing.JLabel errorLabel6;
    private javax.swing.JLabel eulaLabel;
    private javax.swing.JButton hostButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTextField mailInput;
    private javax.swing.JLabel mailLabel;
    private javax.swing.JTextField nameInput;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton particularButton;
    private javax.swing.JPasswordField passwordInput;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JLabel passwordLabel2;
    private javax.swing.JLabel passwordLabel3;
    private javax.swing.JTextField phoneInput;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JButton submitButton;
    private javax.swing.JCheckBox termsCheckbox;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables

}
