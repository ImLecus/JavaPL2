package gui;
import polaris.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.ArrayList;
import javax.swing.*;
import org.netbeans.lib.awtextra.AbsoluteConstraints;
import poo.javabnb.*;
import poo.javabnb.util.*;

public class ProfilePage extends JPanel implements DynamicPage {
    
    public ArrayList<BuildingWidget> widgets;
    ArrayList<ReservationWidget> widgets_r;
    
    public ProfilePage() {
        initComponents();
        widgets = new ArrayList<>();
        widgets_r = new ArrayList<>();
        jScrollPane1.getVerticalScrollBar().setUnitIncrement(20);
        backButton.addActionListener((ActionEvent e) -> {
            App.redirect("MAIN");
        });
        Polaris.highlightOnHover(saveButton);
        Polaris.highlightOnHover(editButton);
        editButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e){
                userPhoneLabel.setEditable(true);
                userMailLabel.setEditable(true);
                nameLabel.setEditable(true);
                userPhoneLabel.setBackground(Polaris.INPUT_BG_COLOR);
                userMailLabel.setBackground(Polaris.INPUT_BG_COLOR);
                nameLabel.setBackground(Polaris.INPUT_BG_COLOR);
                saveButton.setVisible(true);
                deleteAccountButton.setVisible(true);
            }
        }); 
    }
    
    @Override
    public void reloadContent(){
        newPostButton.setVisible(App.session.isHost());
        pinnedPostsLabel.setText(App.session.isHost()? "Mis inmuebles" : "Inmuebles guardados");
        userNameLabel.setText(App.session == null? "null" : App.session.getUser().getName());
        nameLabel.setText(App.session == null? "null" : App.session.getUser().getName());
        userMailLabel.setText(App.session == null? "null" : App.session.getUser().getMail());
        userPhoneLabel.setText(App.session == null? "null" : App.session.getUser().getNumber());
        userPhoneLabel.setBackground(Polaris.BG_COLOR);
        userMailLabel.setBackground(Polaris.BG_COLOR);
        nameLabel.setBackground(Polaris.BG_COLOR);
        saveButton.setVisible(false);
        deleteAccountButton.setVisible(false);
        
        File file = new File("./src/main/resources/images/" + App.session.getUser().getDNI() + "1.png");
        if(file.exists()){
            pfp.setIcon(Images.getIcon("/images/" + App.session.getUser().getDNI() + "1.png") );
        }
        else {
            System.out.println("Warning: el usuario no tiene foto de perfil");
            pfp.setIcon(Images.getIcon("/images/profile_default.png"));
        }
        
        File bannerFile = new File("./src/main/resources/images/" + App.session.getUser().getDNI() + "3.png");
        if(bannerFile.exists()){
            banner.setIcon(Images.getIcon("/images/" + App.session.getUser().getDNI() + "3.png") );
        }
        else {
            System.out.println("Warning: el usuario no tiene banner");
            banner.setIcon(Images.getIcon("/images/banner.png"));
        }
        
    }
    
    @Override
    public void deleteDynamicContent(){
        for(BuildingWidget bw : widgets){
            content.remove(bw);
        }
    }
    
    @Override
    public void createDynamicContent(){
        ArrayList<Building> array = App.session.isHost() ? ((Host) App.session.getUser()).getAllBuildings() : App.buildings.entries;
        
        int max = App.session.isHost()? array.size() : App.session.getUser().getPinnedPosts().size();

        int i = 0;
        int rows = 0;
        
        while(i < max){
            for(int x = 0; x < App.frame.getWidth()-520-160 && i < max; x += 330){
                BuildingWidget bw = new BuildingWidget();
                widgets.add(bw);
                content.add(bw, new AbsoluteConstraints(475 + x, 520 + 330*rows, -1, -1));
                bw.init(
                    App.session.isHost() ? array.get(i): App.buildings.entries.get(App.session.getUser().getPinnedPosts().get(i) - 1),i 
                );
                ++i;
            }
            ++rows;
        }

        rows = 0;
        for(Building b : App.buildings.entries){
            for(Reservation r:b.reservations){
                if(r.getClient().getDNI().equals(App.session.getUser().getDNI())){
                   ReservationWidget rw = new ReservationWidget();
                   widgets_r.add(rw);
                   content.add(rw, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 520 + 170*rows, -1, -1));
                   rw.init(b,r);
                   ++rows;
                } 
            } 
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        content = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        backButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        userNameLabel = new javax.swing.JLabel();
        pfp = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        editButton = new javax.swing.JButton();
        banner = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        mailLabel1 = new javax.swing.JLabel();
        nameLabel = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        mailLabel = new javax.swing.JLabel();
        userMailLabel = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        phoneLabel = new javax.swing.JLabel();
        userPhoneLabel = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        deleteAccountButton = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 30), new java.awt.Dimension(0, 0));
        jPanel1 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        pinnedPostsLabel = new javax.swing.JLabel();
        pinnedPostsLabel1 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        newPostButton = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setBackground(polaris.Polaris.BG_COLOR);
        setLayout(new java.awt.GridLayout(1, 0));

        jScrollPane1.setBackground(Polaris.BG_COLOR);
        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        content.setBackground(Polaris.BG_COLOR);
        content.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backButton.setBackground(polaris.Polaris.TRANSPARENT_COLOR);
        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/arrow.png"))); // NOI18N
        backButton.setBorder(null);
        backButton.setBorderPainted(false);
        backButton.setContentAreaFilled(false);
        backButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        backButton.setFocusable(false);
        jLayeredPane1.setLayer(backButton, javax.swing.JLayeredPane.MODAL_LAYER);
        jLayeredPane1.add(backButton);
        backButton.setBounds(20, 20, 24, 24);

        jPanel2.setBackground(Polaris.TRANSPARENT_COLOR);
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        userNameLabel.setFont(FontManager.titleFont);
        userNameLabel.setText("Nombre");
        jPanel2.add(userNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 75, -1, -1));

        pfp.setBackground(polaris.Polaris.BG_COLOR);
        pfp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/profile_default.png"))); // NOI18N
        pfp.setBorder(null);
        pfp.setBorderPainted(false);
        pfp.setContentAreaFilled(false);
        pfp.setDefaultCapable(false);
        pfp.setFocusPainted(false);
        pfp.setFocusable(false);
        pfp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pfpActionPerformed(evt);
            }
        });
        jPanel2.add(pfp, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jPanel10.setLayout(new java.awt.GridBagLayout());

        editButton.setBackground(Polaris.MAIN_COLOR);
        editButton.setFont(FontManager.boldFont);
        editButton.setForeground(Polaris.BG_COLOR);
        editButton.setText("Editar perfil");
        editButton.setBorder(null);
        editButton.setBorderPainted(false);
        editButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        editButton.setFocusPainted(false);
        editButton.setFocusable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.ipady = 8;
        jPanel10.add(editButton, gridBagConstraints);

        jPanel2.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 125, -1, -1));

        jLayeredPane1.setLayer(jPanel2, javax.swing.JLayeredPane.MODAL_LAYER);
        jLayeredPane1.add(jPanel2);
        jPanel2.setBounds(160, 180, 700, 150);

        banner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/banner.png"))); // NOI18N
        banner.setBorder(null);
        banner.setBorderPainted(false);
        banner.setDefaultCapable(false);
        banner.setDisabledIcon(null);
        banner.setFocusPainted(false);
        banner.setFocusable(false);
        banner.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        banner.setOpaque(true);
        banner.setRequestFocusEnabled(false);
        banner.setRolloverEnabled(false);
        banner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bannerActionPerformed(evt);
            }
        });
        jLayeredPane1.add(banner);
        banner.setBounds(0, 0, 1920, 250);

        content.add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1920, 330));

        jPanel4.setBackground(Polaris.BG_COLOR);
        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel3.setBackground(Polaris.BG_COLOR);
        jPanel3.setLayout(new java.awt.GridLayout(1, 0, 10, 0));

        jPanel8.setBackground(Polaris.BG_COLOR);
        jPanel8.setLayout(new javax.swing.BoxLayout(jPanel8, javax.swing.BoxLayout.PAGE_AXIS));

        mailLabel1.setFont(FontManager.boldFont);
        mailLabel1.setText("Nombre");
        jPanel8.add(mailLabel1);

        nameLabel.setEditable(false);
        nameLabel.setBackground(Polaris.INPUT_BG_COLOR);
        nameLabel.setFont(FontManager.regularFont);
        nameLabel.setText("****");
        nameLabel.setBorder(null);
        nameLabel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameLabelKeyPressed(evt);
            }
        });
        jPanel8.add(nameLabel);

        jPanel3.add(jPanel8);

        jPanel5.setBackground(Polaris.BG_COLOR);
        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.PAGE_AXIS));

        mailLabel.setFont(FontManager.boldFont);
        mailLabel.setText("Correo");
        jPanel5.add(mailLabel);

        userMailLabel.setEditable(false);
        userMailLabel.setBackground(Polaris.INPUT_BG_COLOR);
        userMailLabel.setFont(FontManager.regularFont);
        userMailLabel.setText("****");
        userMailLabel.setBorder(null);
        userMailLabel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameLabelKeyPressed(evt);
            }
        });
        jPanel5.add(userMailLabel);

        jPanel3.add(jPanel5);

        jPanel6.setBackground(Polaris.BG_COLOR);
        jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.PAGE_AXIS));

        phoneLabel.setFont(FontManager.boldFont);
        phoneLabel.setText("Teléfono");
        jPanel6.add(phoneLabel);

        userPhoneLabel.setEditable(false);
        userPhoneLabel.setBackground(Polaris.INPUT_BG_COLOR);
        userPhoneLabel.setFont(FontManager.regularFont);
        userPhoneLabel.setText("****");
        userPhoneLabel.setBorder(null);
        userPhoneLabel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameLabelKeyPressed(evt);
            }
        });
        jPanel6.add(userPhoneLabel);

        jPanel3.add(jPanel6);

        jPanel9.setBackground(Polaris.BG_COLOR);
        jPanel9.setLayout(new java.awt.GridBagLayout());

        saveButton.setBackground(Polaris.MAIN_COLOR);
        saveButton.setFont(FontManager.boldFont);
        saveButton.setForeground(Polaris.BG_COLOR);
        saveButton.setText("Guardar cambios");
        saveButton.setBorder(null);
        saveButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 36;
        gridBagConstraints.ipady = 12;
        jPanel9.add(saveButton, gridBagConstraints);

        jPanel3.add(jPanel9);

        jPanel11.setBackground(Polaris.BG_COLOR);
        jPanel11.setLayout(new java.awt.GridBagLayout());

        deleteAccountButton.setBackground(Polaris.SECONDARY_COLOR);
        deleteAccountButton.setFont(FontManager.boldFont);
        deleteAccountButton.setForeground(Polaris.TEXT_COLOR);
        deleteAccountButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ban.png"))); // NOI18N
        deleteAccountButton.setText("Eliminar cuenta");
        deleteAccountButton.setBorder(null);
        deleteAccountButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        deleteAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAccountButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.ipadx = 16;
        gridBagConstraints.ipady = 8;
        jPanel11.add(deleteAccountButton, gridBagConstraints);

        jPanel3.add(jPanel11);

        jPanel4.add(jPanel3);
        jPanel4.add(filler1);

        jPanel1.setBackground(Polaris.BG_COLOR);
        jPanel1.setLayout(new java.awt.BorderLayout());

        jPanel12.setBackground(Polaris.BG_COLOR);
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pinnedPostsLabel.setBackground(Polaris.BG_COLOR);
        pinnedPostsLabel.setFont(FontManager.titleFont);
        pinnedPostsLabel.setForeground(polaris.Polaris.TEXT_COLOR);
        pinnedPostsLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pinnedPostsLabel.setText(" Inmuebles guardados");
        pinnedPostsLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jPanel12.add(pinnedPostsLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 20, 400, -1));

        pinnedPostsLabel1.setBackground(Polaris.BG_COLOR);
        pinnedPostsLabel1.setFont(FontManager.titleFont);
        pinnedPostsLabel1.setForeground(polaris.Polaris.TEXT_COLOR);
        pinnedPostsLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        pinnedPostsLabel1.setText("Mis reservas");
        pinnedPostsLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jPanel12.add(pinnedPostsLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 20, -1, -1));

        jPanel1.add(jPanel12, java.awt.BorderLayout.WEST);

        jPanel7.setBackground(Polaris.BG_COLOR);
        jPanel7.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        newPostButton.setBackground(Polaris.MAIN_COLOR);
        newPostButton.setFont(FontManager.boldFont);
        newPostButton.setForeground(Polaris.BG_COLOR);
        newPostButton.setText("Crear inmueble...");
        newPostButton.setBorder(null);
        newPostButton.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        newPostButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newPostButtonActionPerformed(evt);
            }
        });
        jPanel7.add(newPostButton);

        jPanel1.add(jPanel7, java.awt.BorderLayout.EAST);

        jPanel4.add(jPanel1);

        content.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 360, 910, 140));

        jScrollPane1.setViewportView(content);

        add(jScrollPane1);
    }// </editor-fold>//GEN-END:initComponents

    private void pfpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pfpActionPerformed
        File file = Images.createImageChooser();
        Images.resizeImage(file, "./src/main/resources/images/" + App.session.getUser().getDNI() + "1.png", 150, 150);
        Images.resizeImage(file, "./src/main/resources/images/" + App.session.getUser().getDNI() + "2.png", 80, 80);
        App.redirect("PROFILE");
    }//GEN-LAST:event_pfpActionPerformed

    private void bannerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bannerActionPerformed
        File file = Images.createImageChooser();
        Images.resizeImage(file, "./src/main/resources/images/" + App.session.getUser().getDNI() + "3.png", 1920, 250);
        App.redirect("PROFILE");
    }//GEN-LAST:event_bannerActionPerformed

    private void newPostButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newPostButtonActionPerformed
        new NewBuildingPage().main(null);
    }//GEN-LAST:event_newPostButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        
        if(saveButton.isEnabled()){
            App.session.getUser().setInfo(nameLabel.getText(), userMailLabel.getText(), userPhoneLabel.getText(), Hashing.hashInfo(App.session.getUser().getPassword()));
            App.session.updateSession(); 
            userPhoneLabel.setEditable(false);
            userMailLabel.setEditable(false);
            nameLabel.setEditable(false);
            userPhoneLabel.setBackground(Polaris.BG_COLOR);
            userMailLabel.setBackground(Polaris.BG_COLOR);
            nameLabel.setBackground(Polaris.BG_COLOR);
            saveButton.setVisible(false);
            deleteAccountButton.setVisible(false);
            App.redirect("PROFILE");
        }
            
    }//GEN-LAST:event_saveButtonActionPerformed

    private void nameLabelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameLabelKeyPressed
        boolean name = Validate.validateName(nameLabel.getText());
        boolean mail = Validate.validateMail(userMailLabel.getText());
        boolean number = Validate.validatePhone(userPhoneLabel.getText());
        boolean password = true; // to be implemented
        if(name && mail && number && password){
            Polaris.enable(saveButton);
        }
        else{
            Polaris.disable(saveButton);
        }
    }//GEN-LAST:event_nameLabelKeyPressed

    private void deleteAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAccountButtonActionPerformed
        App.db.remove(App.session.getEntry());
        App.db.saveData("./src/main/resources/data/data.dat");
        App.redirect("LOGIN");
    }//GEN-LAST:event_deleteAccountButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JButton banner;
    private javax.swing.JPanel content;
    private javax.swing.JButton deleteAccountButton;
    private javax.swing.JButton editButton;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel mailLabel;
    private javax.swing.JLabel mailLabel1;
    private javax.swing.JTextField nameLabel;
    private javax.swing.JButton newPostButton;
    private javax.swing.JButton pfp;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JLabel pinnedPostsLabel;
    private javax.swing.JLabel pinnedPostsLabel1;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField userMailLabel;
    private javax.swing.JLabel userNameLabel;
    private javax.swing.JTextField userPhoneLabel;
    // End of variables declaration//GEN-END:variables

}
